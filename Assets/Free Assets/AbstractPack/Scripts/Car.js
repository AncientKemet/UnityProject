var wheelFL : Transform;var wheelFR : Transform;var wheelBL : Transform;var wheelBR : Transform;var frontWheelSteering = false;var rearWheelSteering = false;var frontWheelDrive = false;var rearWheelDrive = false;var minSteeringAngle = 0.00;var maxSteeringAngle = 0.00;var highSpeed = 0.00;var motorMass = 1.00;var motorDrag = 0.00;var maxAcceleration = 0.00;var maxMotorSpeed = 0.00;var minTorque = 0.00;var maxTorque = 0.00;var centerOfMass : Vector3;rigidbody.centerOfMass = centerOfMass;private var scriptWheelFL : Wheel;private var scriptWheelFR : Wheel;private var scriptWheelBL : Wheel;private var scriptWheelBR : Wheel;scriptWheelFL = wheelFL.GetComponent(Wheel);scriptWheelFR = wheelFR.GetComponent(Wheel);scriptWheelBL = wheelBL.GetComponent(Wheel);scriptWheelBR = wheelBR.GetComponent(Wheel);scriptWheelFL.car = this;scriptWheelFR.car = this;scriptWheelBL.car = this;scriptWheelBR.car = this;var steeringInput = 0.00;var motorInput = 0.00;var motorTorque = 0.00;var motorAccel = 0.00;var motorSpeed = 0.00;var steeringAngle = 0.00;if(frontWheelDrive) scriptWheelFL.driven = scriptWheelFR.driven = true;if(rearWheelDrive) scriptWheelBL.driven = scriptWheelBR.driven = true;function FixedUpdate (){	steeringInput = Input.GetAxis("Horizontal");	motorInput = Input.GetAxis("Vertical");		if(frontWheelSteering) wheelFL.localRotation = wheelFR.localRotation = Quaternion.LookRotation(Vector3(steeringInput * (steeringAngle / 90), 0, 1 + (-1 * Mathf.Abs(steeringInput * (steeringAngle / 90))) ));	if(rearWheelSteering) wheelBL.localRotation = wheelBR.localRotation = Quaternion.LookRotation(Vector3(-steeringInput * (steeringAngle / 90), 0, 1 + (-1 * Mathf.Abs(steeringInput * (steeringAngle / 90))) ));		if(frontWheelDrive || rearWheelDrive)	{		motorTorque = Mathf.Lerp(maxTorque / 30, minTorque / 30, motorSpeed / maxMotorSpeed) * Mathf.Abs(motorInput);		if(motorTorque < 1) motorTorque = 1;		motorAccel = Mathf.Lerp(maxAcceleration, 0, motorSpeed / maxMotorSpeed);		steeringAngle = Mathf.Lerp(maxSteeringAngle, minSteeringAngle, rigidbody.velocity.magnitude / highSpeed);		motorSpeed += motorInput * motorAccel / motorMass * Time.fixedDeltaTime;				if(frontWheelDrive)		{			scriptWheelFL.speed = scriptWheelFR.speed = motorSpeed;		}				if(rearWheelDrive)		{			scriptWheelBL.speed = scriptWheelBR.speed = motorSpeed;		}				motorSpeed += -motorSpeed * motorDrag / motorTorque * Time.fixedDeltaTime;	}} function AddForceOnMotor (force : float){	motorSpeed += force / motorTorque;}